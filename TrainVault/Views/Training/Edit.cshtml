
@model TrainVault.Models.TrainingModel

<div class="pt-2">
    <h1 class="text-black">Edit Training</h1>

<form asp-action="Edit" method="post">
    @if (ViewData.ModelState.Values.SelectMany(v => v.Errors).Any())
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <ul class="list-unstyled text-danger m-0">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li><i class="fa-solid fa-triangle-exclamation"></i> @error.ErrorMessage</li>
                }
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <input type="hidden" asp-for="TrainingId" />
    <div class="form-group">
        <label asp-for="DateOfTraining"></label>
        <input asp-for="DateOfTraining" class="form-control w-auto" type="date" />
        <span asp-validation-for="DateOfTraining" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Purpose"></label>
        <input asp-for="Purpose" class="form-control" />
        <span asp-validation-for="Purpose" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Place"></label>
        <select asp-for="Place" class="form-select" placeholder="Place">
            <option value="Training Room 1">Training Room 1</option>
            <option value="Training Room 2">Training Room 2</option>
            <option value="Conference Room">Conference Room</option>
            <option value="2nd Floor">2nd Floor</option>
            <option value="Silver Hall">Silver Hall</option>
        </select>
        <span asp-validation-for="Place" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="OrganizationId"></label>
        <select asp-for="OrganizationId" asp-items="Model.Organizations" class="form-control" id="OrganizationSelect"></select>
        <span asp-validation-for="OrganizationId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Select Employees</label>
        <div id="EmployeeCheckboxList">
            @foreach (var employee in Model.Employees)
            {
                
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="@employee.Value" id="employee_@employee.Value" name="SelectedEmployeeIds" @(Model.SelectedEmployeeIds.Contains(Int32.Parse(employee.Value)) ? "checked" : "") />
                    <label class="form-check-label" for="employee_@employee.Value">
                        @employee.Text
                    </label>
                </div>
            }
        </div>
        <span asp-validation-for="SelectedEmployeeIds" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</form>
</div>
<div class="my-3">
    <a asp-action="Index" class="btn btn-secondary"><i class="fa-solid fa-circle-left fa-lg"></i> Back to List</a>
</div>

@section Scripts {
    <script>
        $(function () {
            $('#OrganizationSelect').change(function () {
                var orgId = $(this).val();
                $.get('/Training/GetEmployeesByOrganization', { organizationId: orgId }, function (data) {
                    var $employeeList = $('#EmployeeCheckboxList');
                    $employeeList.empty();
                    $.each(data, function (i, item) {
                        var checkbox = '<div class="form-check">' +
                            '<input class="form-check-input" type="checkbox" value="' + item.value + '" id="employee_' + item.value + '" name="SelectedEmployeeIds" />' +
                            '<label class="form-check-label" for="employee_' + item.value + '">' + item.text + '</label>' +
                            '</div>';
                        $employeeList.append(checkbox);
                    });
                });
            });

            // Pre-select employees
            var selectedValues = @Html.Raw(Json.Serialize(Model.SelectedEmployeeIds));
            selectedValues.forEach(function (value) {
                $('#employee_' + value).prop('checked', true);
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
